Explanation

Suppose we have to add 243 & 564.
We create a node (let newNode = new ListNode(0);) and take a variable head and make it equal to newNode.
Now what is head ?
A node which is pointing to nothing. Floating in universe.
Why we created a node head ???
This head which is pointing to nothing indicates that our sum is nothing initially,
When we will start addition we will use this head to store our sum

We take a variable as carry.
Notice we can only move from the head towards the tail and it won't matter because 243 + 564 = 342 + 465

We come into a while loop and say let "a" or first value is "2" from 243 and b or second value be "5" from 564.

We add both value (2 + 5 = 7) and put them into sum. But wait we learned one thing,
if the sum is lesser than 10 put it into sum
but if it is greater or equal to 10, put the last digit from that 2 digit number into sum and the first digit into carry.
For example, if we add 2 numbers and get suppose 13, we put 3 into sum and 1 in carry.

After the first addition 7 will be the result.

Now that head which was pointing towards nothing will point to 7
head.next = new ListNode(sum%10);
Above line says if sum is greater than 10 make variable head point to its last digit in above case 7 is a single digit num so head will point to 7.

Now we will add next numbers i.e 4 & 6 = 10, now we will put 0 into sum and 1 into carry.
Now head variable will move forward ( head = head.next; ) and sit on 7 and point to 0.

Now we will add next numbers i.e 3 & 4 = 7, this time carry will also be added to sum becomes 3 + 4 + 1 = 8.

Now head variable will move forward ( head = head.next; ) and sit on 0 and point to 8.

Now we have nothing left to add so ( return newNode.next; ) will return the answer.

why newNode.next is returning the answer???????????

newNode was poiting to to nothing but newNode.next is ??????
The first digit of our sum which is generated by head.

Lastely if(carry > 0) head.next = new ListNode(carry);
this line is saying after adding last digits of the num we get some carry,
So create a new node and put it into sum.
